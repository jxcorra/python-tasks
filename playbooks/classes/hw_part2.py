# Часть 1.
# 1. возьмите за основу домашнее задание из первой части ООП.
# 2. переделайте ваш класс Character в dataclass.
# 3. реализуйте классы наследники для Character: наследование будет базироваться на значении аттрибута species.
#     3.1 подсказка: для начала найдите все уникальные значения species.
# 4. напишите метакласс, задача которого собрать все имеющиеся классы Character в registry.
# 5. добавьте способ для создания объекта Character конкретного класса-наследника в зависимости от значения ключа species в словаре.
# 6. ваш код должен превратить список словарей персонажей в список объектов Character.
# 7. реализуйте в вашей программе подсчет персонажей каждой расы.
#
# Часть 2.
# 1. реализуйте поддержку комманды сохранения в зависимости от формата (json, csv), указанного с клавиатуры в формате FileSaveHandler.
#     1.1. напишите метакласс, задача которого собрать все имеющиеся классы FileSaveHandler в registry.
#     1.2. примеры комманды с клавиатуры: save json characters.json, save csv characters.csv, формат комманды: save <format> <filepath>
#     1.3. подсказка: в случае с csv добавьте первой строкой в файл имена колонок
# 2. добавьте возможность указать с клавиатуры фильтр для данных, которые необходимо сохранить в файл.
#     2.1. примеры ввода фильтра: save json characters.json --filter Human, формат комманды: save <format> <filepath> --filter <species>